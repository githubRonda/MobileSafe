<resources>

    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>

    </style>

    <!--无ActionBar-->
    <style name="AppTheme.NoActionBar">
        <item name="windowActionBar">false</item>
        <item name="windowNoTitle">true</item>
    </style>

    <!--透明Activity背景的主题
    当我们的Activity继承自Activity本身时，可以直接使用android:theme="@android:style/Theme.Translucent.NoTitleBar"即可
    当继承自AppCompatActivity时，只能使用Theme.AppCompat下的主题。而这些主题并没有Translucent类似的主题。所以此时只能自定义主题
    -->
    <style name="CompatTranslucent" parent="AppTheme.NoActionBar">
        <!--下面这两个是缺一不可-->
        <item name="android:windowIsTranslucent">true</item>
        <item name="android:windowBackground">@android:color/transparent</item>
        <!--<item name="android:windowBackground">@color/translucent</item>--> <!--直接设置半透明的颜色也可以-->
        <!--<item name="android:background">@android:color/transparent</item>--> <!--这个是没有用的-->
    </style>

    <!--标题栏样式-->
    <style name="TitleStyle">
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">50dp</item>
        <item name="android:background">#8866ff00</item>
        <item name="android:gravity">center</item>
        <item name="android:textColor">@color/black</item>
        <item name="android:textSize">22sp</item>
    </style>


    <!--向导页中的第一行文本的样式-->
    <style name="ContentStyle">
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:layout_marginLeft">5dp</item>
        <item name="android:layout_marginTop">5dp</item>
        <item name="android:textColor">@color/black</item>
        <item name="android:textSize">18sp</item>
    </style>


    <!--向导页中的下一步按钮-->
    <style name="NextBtnStyle">
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:layout_alignParentBottom">true</item>
        <item name="android:background">@drawable/sel_btn_green</item>
        <item name="android:layout_alignParentRight">true</item>
        <item name="android:drawableRight">@drawable/next</item>
        <item name="android:text">下一步</item>
        <item name="android:onClick">next</item>
    </style>


    <!--向导页中的上一步按钮-->
    <style name="PreviosBtnStyle">
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:layout_alignParentBottom">true</item>
        <item name="android:background">@drawable/sel_btn_green</item>
        <item name="android:layout_alignParentLeft">true</item>
        <item name="android:drawableLeft">@drawable/previous</item>
        <item name="android:text">上一步</item>
        <item name="android:onClick">previous</item>
    </style>

</resources>
